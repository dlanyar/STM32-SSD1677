#ifndef SSD1677_H
#define SSD1677_H

#include "stm32u5xx_hal.h"
#include <stdbool.h>
// Display Resolution
#define EPD_WIDTH  480
#define EPD_HEIGHT 280

// Définir les couleurs
#define BLACK 0x00
#define WHITE 0xFF

// Prototypes des fonctions pour initialiser et contrôler l'écran e-Paper
void SSD1677_Init(SPI_HandleTypeDef *hspi, GPIO_TypeDef *cs_port, uint16_t cs_pin, GPIO_TypeDef *dc_port, uint16_t dc_pin, GPIO_TypeDef *reset_port, uint16_t reset_pin, GPIO_TypeDef *busy_port, uint16_t busy_pin);
void SSD1677_Clear(uint8_t mode);
void SSD1677_SetCursor(uint16_t x, uint16_t y);
void SSD1677_PrintString(char *str, const uint8_t *font, uint16_t color);
void SSD1677_Reset(void);
void SSD1677_Sleep(void);
void SSD1677_TurnOnDisplay(void);
void Load_LUT(uint8_t mode);
void DisplayFrame(const uint8_t *Image, bool isBase);
void DisplayFrame_Part(const uint8_t *Image, uint16_t Xstart, uint16_t Ystart, uint16_t Xend, uint16_t Yend, bool isGC);
void DisplayFrame_Partial(const uint8_t *Image, uint16_t Xstart, uint16_t Ystart, uint16_t iwidth,uint16_t iheight);

static const uint8_t lut_4Gray_GC[] =
{
    0x2A,0x06,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//1
    0x28,0x06,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//2
    0x20,0x06,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//3
    0x14,0x06,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//4
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//5
    0x00,0x02,0x02,0x0A,0x00,0x00,0x00,0x08,0x08,0x02,//6
    0x00,0x02,0x02,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,//7
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//8
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//9
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//10
    0x22,0x22,0x22,0x22,0x22
};  

static const uint8_t lut_1Gray_GC[] =
{
    0x2A,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//1
    0x05,0x2A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//2
    0x2A,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//3
    0x05,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//4
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//5
    0x00,0x02,0x03,0x0A,0x00,0x02,0x06,0x0A,0x05,0x00,//6
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//7
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//8
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//9
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//10
    0x22,0x22,0x22,0x22,0x22
};  

static const uint8_t lut_1Gray_DU[] =
{
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//1
    0x01,0x2A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x0A,0x55,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//3
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//5
    0x00,0x00,0x05,0x05,0x00,0x05,0x03,0x05,0x05,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//7
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//9
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x22,0x22,0x22,0x22,0x22
}; 

static const uint8_t lut_1Gray_A2[] =
{
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //1
0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //2
0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //3
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //4
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //5
0x00,0x00,0x03,0x05,0x00,0x00,0x00,0x00,0x00,0x00, //6
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //7
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //8
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //9
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //10
0x22,0x22,0x22,0x22,0x22
}; 

#endif // SSD1677_H
